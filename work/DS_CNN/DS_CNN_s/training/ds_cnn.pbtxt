node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "Add"
  input: "clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AudioSpectrogram"
  op: "AudioSpectrogram"
  input: "clip_by_value"
  attr {
    key: "magnitude_squared"
    value {
      b: true
    }
  }
  attr {
    key: "stride"
    value {
      i: 320
    }
  }
  attr {
    key: "window_size"
    value {
      i: 640
    }
  }
}
node {
  name: "Mfcc"
  op: "Mfcc"
  input: "AudioSpectrogram"
  input: "DecodeWav:1"
  attr {
    key: "dct_coefficient_count"
    value {
      i: 10
    }
  }
  attr {
    key: "filterbank_channel_count"
    value {
      i: 40
    }
  }
  attr {
    key: "lower_frequency_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "upper_frequency_limit"
    value {
      f: 4000.0
    }
  }
}
node {
  name: "fingerprint_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 490
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\3771\000\000\000\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0480384454131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0480384454131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "DS-CNN/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_1/Conv2D"
  input: "DS-CNN/conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_1/BiasAdd"
  input: "DS-CNN/conv_1/batch_norm/Const"
  input: "DS-CNN/conv_1/batch_norm/beta/read"
  input: "DS-CNN/conv_1/batch_norm/Const_1"
  input: "DS-CNN/conv_1/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_1/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_1/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_1/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_1/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_1/exp_conv/Conv2D"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_1/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416125170887
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416125170887
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_1/pj_conv/Conv2D"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_1/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.115727514029
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/exp_conv/Conv2D"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_2/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416125170887
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416125170887
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.120096117258
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.120096117258
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/pj_conv/Conv2D"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_2/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.306186228991
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.306186228991
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_2/res_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/res_conv/Conv2D"
  input: "DS-CNN/conv_ds_2/res_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.163663417101
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.163663417101
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_2/res_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/exp_conv/Conv2D"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_3/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0587727092206
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0587727092206
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6"
  op: "Relu6"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.169841557741
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.169841557741
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/pj_conv/Conv2D"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_3/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_3/res_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/res_conv/Conv2D"
  input: "DS-CNN/conv_ds_3/res_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/avg_pool/AvgPool"
  op: "AvgPool"
  input: "DS-CNN/conv_ds_3/res_conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 25
        i: 5
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/SpatialSqueeze"
  op: "Squeeze"
  input: "DS-CNN/avg_pool/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.462910056114
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.462910056114
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/max"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/MatMul"
  op: "MatMul"
  input: "DS-CNN/SpatialSqueeze"
  input: "DS-CNN/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/fc1/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/fc1/MatMul"
  input: "DS-CNN/fc1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "cross_entropy/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/Shape"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/Shape_1"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/Sub"
  op: "Sub"
  input: "cross_entropy/Rank_1"
  input: "cross_entropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Slice/begin"
  op: "Pack"
  input: "cross_entropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/Slice"
  op: "Slice"
  input: "cross_entropy/Shape_1"
  input: "cross_entropy/Slice/begin"
  input: "cross_entropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/concat"
  op: "ConcatV2"
  input: "cross_entropy/concat/values_0"
  input: "cross_entropy/Slice"
  input: "cross_entropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Reshape"
  op: "Reshape"
  input: "DS-CNN/fc1/BiasAdd"
  input: "cross_entropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/Shape_2"
  op: "Shape"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/Sub_1"
  op: "Sub"
  input: "cross_entropy/Rank_2"
  input: "cross_entropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Slice_1/begin"
  op: "Pack"
  input: "cross_entropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/Slice_1"
  op: "Slice"
  input: "cross_entropy/Shape_2"
  input: "cross_entropy/Slice_1/begin"
  input: "cross_entropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/concat_1"
  op: "ConcatV2"
  input: "cross_entropy/concat_1/values_0"
  input: "cross_entropy/Slice_1"
  input: "cross_entropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Reshape_1"
  op: "Reshape"
  input: "groundtruth_input"
  input: "cross_entropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/Reshape"
  input: "cross_entropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/Sub_2"
  op: "Sub"
  input: "cross_entropy/Rank"
  input: "cross_entropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/Slice_2/size"
  op: "Pack"
  input: "cross_entropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/Slice_2"
  op: "Slice"
  input: "cross_entropy/Shape"
  input: "cross_entropy/Slice_2/begin"
  input: "cross_entropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Reshape_2"
  op: "Reshape"
  input: "cross_entropy/SoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/Mean"
  op: "Mean"
  input: "cross_entropy/Reshape_2"
  input: "cross_entropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape"
  op: "Shape"
  input: "cross_entropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  input: "train/gradients/cross_entropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  input: "train/gradients/cross_entropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/cross_entropy/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cross_entropy/SoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/truediv"
  input: "train/gradients/cross_entropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "cross_entropy/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Reshape_grad/Shape"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "train/gradients/cross_entropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/cross_entropy/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/Reshape_grad/Reshape"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/Reshape_grad/Reshape"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  input: "DS-CNN/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DS-CNN/SpatialSqueeze"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/SpatialSqueeze_grad/Shape"
  op: "Shape"
  input: "DS-CNN/avg_pool/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/SpatialSqueeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/DS-CNN/SpatialSqueeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_3/res_conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/Shape"
  input: "train/gradients/DS-CNN/SpatialSqueeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 25
        i: 5
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_3/res_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_3/res_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_3/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_3/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_2/res_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_2/res_conv/BiasAdd"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_2/res_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_2/res_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_2/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_2/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_1/pj_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_ds_1/exp_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_1/batch_norm/Relu6"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_1/batch_norm/Relu6"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_1/batch_norm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/Relu6_grad/Relu6Grad"
  input: "DS-CNN/conv_1/BiasAdd"
  input: "DS-CNN/conv_1/batch_norm/Const"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "DS-CNN/conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_1/weights/read"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 4
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 4
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 4
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "DS-CNN/conv_1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "DS-CNN/fc1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "DS-CNN/fc1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/exp_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/exp_conv/weights"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/exp_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/exp_conv/biases"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pj_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pj_conv/weights"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pj_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pj_conv/biases"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/exp_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/exp_conv/weights"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/exp_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/exp_conv/biases"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pj_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pj_conv/weights"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pj_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pj_conv/biases"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/res_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/res_conv/weights"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/res_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/res_conv/biases"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/res_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/exp_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/exp_conv/weights"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/exp_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/exp_conv/biases"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/exp_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pj_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pj_conv/weights"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pj_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pj_conv/biases"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pj_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/res_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/res_conv/weights"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/res_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/res_conv/biases"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/res_conv/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/update"
  op: "NoOp"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/res_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
}
node {
  name: "train/Adam/value"
  op: "Const"
  input: "^train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train/train_op/control_dependency"
  op: "Identity"
  input: "train/train_op/CheckNumerics"
  input: "^train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/train_op/CheckNumerics"
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "DS-CNN/fc1/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "groundtruth_input"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "ArgMax_1"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2"
  op: "Cast"
  input: "confusion_matrix/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_3"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_3"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "confusion_matrix/transpose/Rank"
  op: "Rank"
  input: "confusion_matrix/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub"
  op: "Sub"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range"
  op: "Range"
  input: "confusion_matrix/transpose/Range/start"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub_1"
  op: "Sub"
  input: "confusion_matrix/transpose/sub"
  input: "confusion_matrix/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose"
  op: "Transpose"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/transpose"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 131
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_1/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_1/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_1/biases"
        string_val: "DS-CNN/conv_1/biases/Adam"
        string_val: "DS-CNN/conv_1/biases/Adam_1"
        string_val: "DS-CNN/conv_1/weights"
        string_val: "DS-CNN/conv_1/weights/Adam"
        string_val: "DS-CNN/conv_1/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases"
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights"
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases"
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights"
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases"
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights"
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases"
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights"
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/res_conv/biases"
        string_val: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/res_conv/weights"
        string_val: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases"
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights"
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases"
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights"
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/res_conv/biases"
        string_val: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/res_conv/weights"
        string_val: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
        string_val: "DS-CNN/fc1/biases"
        string_val: "DS-CNN/fc1/biases/Adam"
        string_val: "DS-CNN/fc1/biases/Adam_1"
        string_val: "DS-CNN/fc1/weights"
        string_val: "DS-CNN/fc1/weights/Adam"
        string_val: "DS-CNN/fc1/weights/Adam_1"
        string_val: "global_step"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 131
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/exp_conv/biases"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/exp_conv/weights"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pj_conv/biases"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/pj_conv/weights"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/exp_conv/biases"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/exp_conv/weights"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pj_conv/biases"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/pj_conv/weights"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/res_conv/biases"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/res_conv/weights"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/exp_conv/biases"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/exp_conv/weights"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pj_conv/biases"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/pj_conv/weights"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/res_conv/biases"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/res_conv/weights"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "global_step"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "DS-CNN/conv_1/biases"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "DS-CNN/conv_1/weights"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/biases/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/exp_conv/weights/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/biases/Adam_1"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pj_conv/weights/Adam_1"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/biases/Adam_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/exp_conv/weights/Adam_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/biases/Adam_1"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pj_conv/weights/Adam_1"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/biases/Adam_1"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/res_conv/weights/Adam_1"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/biases/Adam_1"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/exp_conv/weights/Adam_1"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/exp_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/biases/Adam_1"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pj_conv/weights/Adam_1"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pj_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/biases/Adam_1"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/res_conv/weights/Adam_1"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/res_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "DS-CNN/fc1/biases"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "DS-CNN/fc1/weights"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DS-CNN/fc1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "train/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^DS-CNN/conv_1/weights/Assign"
  input: "^DS-CNN/conv_1/biases/Assign"
  input: "^DS-CNN/conv_1/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_1/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_1/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/biases/Assign"
  input: "^DS-CNN/fc1/weights/Assign"
  input: "^DS-CNN/fc1/biases/Assign"
  input: "^global_step/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
  input: "^DS-CNN/conv_1/weights/Adam/Assign"
  input: "^DS-CNN/conv_1/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_1/biases/Adam/Assign"
  input: "^DS-CNN/conv_1/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_1/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_1/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/exp_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pj_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/exp_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pj_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/res_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/exp_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pj_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/res_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/fc1/weights/Adam/Assign"
  input: "^DS-CNN/fc1/weights/Adam_1/Assign"
  input: "^DS-CNN/fc1/biases/Adam/Assign"
  input: "^DS-CNN/fc1/biases/Adam_1/Assign"
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\n\000\000\000\004\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Shape_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Shape_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "Shape_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Shape_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "Shape_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Shape_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Shape_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "Shape_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "Shape_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "Shape_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "Shape_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
versions {
  producer: 24
}
